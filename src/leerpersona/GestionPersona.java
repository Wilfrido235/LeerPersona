/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package leerpersona;

import java.awt.HeadlessException;
import java.io.File;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author JIMENEZ
 */
public class GestionPersona extends javax.swing.JFrame {

    Controlador controlador;

    public GestionPersona() {
        initComponents();
        setLocationRelativeTo(null);
        this.controlador = new Controlador();
        tabla.setModel(this.controlador.personas());
//        seleccionarPersona();
    }

    private void LeerPersona() {
        try {
             File archivo=new File("C:\\Users\\JIMENEZ\\Pictures\\Proyecto xml leer\\datos.xml");
       DocumentBuilderFactory dbf= DocumentBuilderFactory.newInstance();
       DocumentBuilder db=dbf.newDocumentBuilder();
       Document d=db.parse(archivo);
       d.getDocumentElement().normalize();
       System.out.println("Elemeto principal"+d.getDocumentElement().getNodeName());
       
       NodeList listDocentes = d.getElementsByTagName("docente");   
       
       for(int i=0;i<listDocentes.getLength();i++){
           Node nodo=listDocentes.item(i);
           System.out.println("Docente:"+nodo.getNodeName()+i);
           if(nodo.getNodeType()==Node.ELEMENT_NODE){
               Element element =(Element)nodo;
               element.getAttribute("id");
               element.getElementsByTagName("nombre").item(0).getTextContent();
               element.getElementsByTagName("username").item(0).getTextContent();
               element.getElementsByTagName("password").item(0).getTextContent();
               
                boolean insertado = this.controlador.insertarPersona(Id,NOMBRE,USERNAME,PASWORD);
            if (insertado == true) {
                JOptionPane.showMessageDialog(rootPane, "Datos guardados");
                tabla.setModel(this.controlador.personas());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Algo falló al insertar");
            }

           }   
       }
       }catch(NumberFormatException | HeadlessException e){
               JOptionPane.showMessageDialog(rootPane, "El ID introducido no es un número");
               e.printStackTrace();
               
               }
    }
     private void insertarPersona() {
//        try {
//            boolean insertado = this.controlador.insertarPersona(NOMBRE,USERNAME,PASWORD,ID);
//            if (insertado == true) {
//                JOptionPane.showMessageDialog(rootPane, "Datos guardados");
//                tabla.setModel(this.controlador.personas());
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "Algo falló al insertar");
//            }
//        } catch (NumberFormatException | HeadlessException e) {
//            JOptionPane.showMessageDialog(rootPane, "El ID introducido no es un número");
//        }
    }
//    public void seleccionarPersona() {
//        tabla.addMouseListener(new MouseAdapter() {
//            @Override
//            public void mousePressed(MouseEvent Mouse_evt) {
//                if (Mouse_evt.getClickCount() == 1) {
//                    txtID.setText(tabla.getValueAt(tabla.getSelectedRow(), 0).toString());
//                    txtNombres.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
//                    txtApellidos.setText(tabla.getValueAt(tabla.getSelectedRow(), 2).toString());
//                }
//            }
//        });
//    }

//    private void actualizarPersona() {
//        int id = Integer.valueOf(txtID.getText());
//        String nombre = txtNombres.getText();
//        String apellidos = txtApellidos.getText();
//        boolean insertado = this.controlador.actualizarPersona(id, nombre, apellidos);
//        if (insertado == true) {
//            JOptionPane.showMessageDialog(rootPane, "Datos actualizados");
//            this.cancelar();
//            tabla.setModel(this.controlador.personas());
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "Algo falló al actualizar");
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        ButtonGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        ButtonGuardar.setText("Leer y Guardar");
        ButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(ButtonGuardar)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(ButtonGuardar)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarActionPerformed
        // TODO add your handling code here:
        this.insertarPersona();
    }//GEN-LAST:event_ButtonGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionPersona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
